@model List<pizzalandClient.Models.OrderViewModel>
@{
    ViewBag.Title = "Manage Orders";
}

<h2>Manage Orders</h2>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<hr />

<h3>Existing Orders</h3>

@if (Model.Count > 0)
{
    <ul class="list-group">
        @foreach (var order in Model)
        {
            <li class="list-group-item">
                <div>
                    <strong>Order ID:</strong> @order.Id<br />
                    <strong>User ID:</strong> @order.UserId<br />
                    <strong>Pizza IDs:</strong> @string.Join(", ", order.PizzaIds)<br />
                    <strong>Time of Order:</strong> @order.TimeOfOrder<br />
                    <strong>Total Price:</strong> @order.TotalPrice<br />
                    <strong>Delivery Covered:</strong> @(order.IsDeliveryCovered ? "Yes" : "No")
                </div>
                <div class="mt-2">
                    <button class="btn btn-primary track-order-btn" data-order-id="@order.Id">Track Order</button>
                    <form asp-controller="Order" asp-action="DeleteOrder" method="post" style="display:inline;">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@order.Id" />
                        <button type="submit" class="btn btn-danger ms-2">Delete</button>
                    </form>
                </div>
                <div id="orderStatus_@order.Id" class="mt-2 alert alert-info" style="display: none;"></div>
            </li>
        }
    </ul>
}
else
{
    <p>No orders available.</p>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder().withUrl("/orderHub").build();

        connection.start().then(() => {
            console.log("SignalR connected");
        }).catch(err => console.error(err.toString()));

        connection.on("ReceiveOrderStatus", (orderId, status) => {
            const statusDiv = document.getElementById(`orderStatus_${orderId}`);
            if (statusDiv) {
                statusDiv.style.display = "block";
                statusDiv.innerText = status;
            }
        });

        document.querySelectorAll(".track-order-btn").forEach(btn => {
            btn.addEventListener("click", function () {
                const orderId = this.getAttribute("data-order-id");
                fetch(`/Order/TrackOrder`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ orderId: orderId })
                }).then(response => {
                    if (response.ok) {
                        console.log(`Tracking started for order ${orderId}`);
                    } else {
                        console.error("Failed to start tracking");
                    }
                }).catch(err => console.error('Error:', err));
            });
        });
    </script>
}
